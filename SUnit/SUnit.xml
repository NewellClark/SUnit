<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SUnit</name>
    </assembly>
    <members>
        <member name="T:SUnit.Assert">
            <summary>
            Contains methods for performing assertions.
            </summary>
        </member>
        <member name="M:SUnit.Assert.That``1(``0)">
            <summary>
            Just like every other unit test framework. You say <code>Assert.That(actual).Is.EqualTo(expected);</code>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="actual"></param>
            <returns></returns>
        </member>
        <member name="T:SUnit.Discovery.Finder">
            <summary>
            Contains methods for finding tests.
            </summary>
        </member>
        <member name="M:SUnit.Discovery.Finder.IsValidTestMethod(System.Reflection.MethodInfo)">
            <summary>
            Indicates whether the specified <see cref="T:System.Reflection.MethodInfo"/> is a valid test method.
            </summary>
            <param name="method">The <see cref="T:System.Reflection.MethodInfo"/> to inspect.</param>
            <returns>True if the specified <see cref="T:System.Reflection.MethodInfo"/> is valid.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="method"/> is null.
            </exception>
        </member>
        <member name="M:SUnit.Discovery.Finder.FindAllValidTestMethods(System.Type)">
            <summary>
            Finds all the methods on the specified type that are valid test methods.
            </summary>
            <param name="type">The type to search.</param>
            <returns>All methods defined on the type that are valid test methods.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="type"/> is null.
            </exception>
        </member>
        <member name="T:SUnit.FixtureFactory">
            <summary>
            A method that is responsible for instantiating a Fixture.
            </summary>
        </member>
        <member name="M:SUnit.FixtureFactory.Build">
            <summary>
            Instantiates the fixture.
            </summary>
            <returns>A newly-instantiated fixture.</returns>
        </member>
        <member name="T:SUnit.Test">
            <summary>
            Unit tests report their results by returning <see cref="T:SUnit.Test"/> instances.
            </summary>
        </member>
        <member name="P:SUnit.Test.Passed">
            <summary>
            Gets the result of the test.
            </summary>
        </member>
        <member name="M:SUnit.Test.ToString">
            <summary>
            Overridden to display the result.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SUnit.That`1.Is">
            <summary>
            The class that makes "Is" work.
            </summary>
        </member>
    </members>
</doc>
